{"version":3,"sources":["components/Select.js","components/Mapa.js","components/UseGetData.js","components/UseFetchData.js","components/UseTransformFinalData.js","components/Error.js","components/Spinner.js","components/ChoiceCalendar.js","App.js","serviceWorker.js","index.js"],"names":["Label","styled","InputWrapper","Tag","label","onDelete","props","onClick","Listbox","CategoriesSelect","setSelected","useAutocomplete","id","defaultValue","multiple","options","incidences","getOptionSelected","option","value","title","getOptionLabel","getRootProps","getInputLabelProps","getInputProps","getTagProps","getListboxProps","getOptionProps","groupedOptions","focused","setAnchorEl","useEffect","NoSsr","ref","className","map","index","length","fontSize","Mapa","useState","width","height","position","longitude","latitude","zoom","viewPort","setViewPort","selectedPunt","setSelectedPunt","mapboxApiAccessToken","process","mapStyle","onViewportChange","viewport","dades","punt","key","coord","lat","lon","Button","e","preventDefault","src","alt","carrer","onClose","tipus","data","toDateString","comentari","UseGetData","selected","dateRange","dadesFromGoogle","setDadesFromGoogle","error","setError","loading","setLoading","fetch","then","res","json","elem","content","$t","firstExtract","feed","entry","catch","UseFetchData","finalData","split","console","log","_lat","_lon","_carrer","_tipus","_comentari","_data","Date","trimLeft","parseFloat","tipusIncidencies","forEach","push","Set","sort","_incidencesType","incidencies","UseTransformFinalData","Error","Box","display","style","Typography","err","message","Spinner","color","CircularProgress","text","ChoiceCalendar","React","open","setOpen","toggle","closeOnClickOutside","onChange","range","onChangeDate","handleChange","App","setDateRange","showCalendar","setShowCalendar","toggleCalendar","prevState","incidenciesFiltrades","llistaIncidencies","filter","registre","Object","entries","some","startDate","endDate","filterData","role","aria-label","variant","toLocaleDateString","Popover","elevation","anchorOrigin","vertical","horizontal","transformOrigin","align","previous","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe81d9d7.chunk.js","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React, {useEffect} from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components';\n\nconst Label = styled('label')`\n  padding: 0 0 4px;\n  line-height: 1.5;\n  display: block;\n`;\n\nconst InputWrapper = styled('div')`\n  width: 300px;\n  border: 1px solid #d9d9d9;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n\n  &:hover {\n    border-color: #40a9ff;\n  }\n\n  &.focused {\n    border-color: #40a9ff;\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    font-size: 14px;\n    height: 30px;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n`;\n\nconst Tag = styled(({ label, onDelete, ...props }) => (\n    <div {...props}>\n        <span>{label}</span>\n        <CloseIcon onClick={onDelete} />\n    </div>\n))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 22px;\n  background-color: #fafafa;\n  border: 1px solid #e8e8e8;\n  border-radius: 2px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n\n  &:focus {\n    border-color: #40a9ff;\n    background-color: #e6f7ff;\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 12px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`;\n\nconst Listbox = styled('ul')`\n  width: 300px;\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: #fafafa;\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: #e6f7ff;\n    cursor: pointer;\n\n    & svg {\n      color: #000;\n    }\n  }\n`;\n\nexport default function CategoriesSelect(props) {\n\n    const {setSelected} = props;\n    const {\n        getRootProps,\n        getInputLabelProps,\n        getInputProps,\n        getTagProps,\n        getListboxProps,\n        getOptionProps,\n        groupedOptions,\n        value,\n        focused,\n        setAnchorEl,\n    } = useAutocomplete({\n        id: 'customized-hook-demo',\n        defaultValue: [],\n        multiple: true,\n        options: props.incidences,\n        getOptionSelected: (option, value) => {\n            return (option.title === value.title)\n        },\n        getOptionLabel: (option) => option.title\n    });\n\n    useEffect(()=> {\n        setSelected(value)\n    },[value, setSelected])\n\n\n    return (\n        <NoSsr>\n            <div>\n                <div {...getRootProps()}>\n                    <Label {...getInputLabelProps()}>{props.label}</Label>\n                    <InputWrapper ref={setAnchorEl} className={focused ? 'focused' : ''}>\n                        {value.map((option, index) => (\n                            <Tag label={option.title} {...getTagProps({ index })} />\n                        ))}\n\n                        <input {...getInputProps()} />\n                    </InputWrapper>\n                </div>\n                {groupedOptions.length > 0 ? (\n                    <Listbox {...getListboxProps()}>\n                        {groupedOptions.map((option, index) => (\n                            <li {...getOptionProps({ option, index })}>\n                                <span>{option.title}</span>\n                                <CheckIcon fontSize=\"small\" />\n                            </li>\n                        ))}\n                    </Listbox>\n                ) : null}\n            </div>\n        </NoSsr>\n    );\n}\n\n","import React, { useState } from 'react'\nimport ReactMapGl, { Marker, Popup } from 'react-map-gl'\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { Button } from '@material-ui/core';\n\nconst Mapa = (props) => {\n\n    const estilsMapa = {\n        dark: 'mapbox://styles/mapbox/dark-v10',\n        natural: 'mapbox://styles/mapbox/navigation-guidance-day-v4',\n        light: 'mapbox://styles/mapbox/light-v10',\n        outdoors: 'mapbox://styles/mapbox/outdoors-v11',\n        satellit: 'mapbox://styles/mapbox/satellite-v9'\n    };\n\n    const [viewPort, setViewPort] = useState({\n        width: \"100vh\",\n        height: \"100vh\",\n        position: \"\",\n        longitude: 1.975731,\n        latitude: 41.266965,\n        zoom: 15\n    });\n\n    const [selectedPunt, setSelectedPunt] = useState(null);\n\n    return (\n        <div>\n            <ReactMapGl {...viewPort}\n                mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n                mapStyle={estilsMapa.dark}\n                onViewportChange={viewport => {\n                    setViewPort(viewport);\n                }}\n            >\n\n                {\n                    props.dades.map((punt, index) => {\n                        return (\n                            <Marker\n                                key={index}\n                                latitude={punt.coord.lat}\n                                longitude={punt.coord.lon}\n                            >\n                                <Button\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setSelectedPunt(punt);\n                                    }}>\n                                    <img src=\"./assets/puntCalent.png\" alt={punt.carrer} />\n                                </Button>\n                            </Marker>\n                        )\n                    })\n                }\n\n                {selectedPunt ? (\n                    <Popup latitude={selectedPunt.coord.lat}\n                        longitude={selectedPunt.coord.lon}\n                        onClose={() => setSelectedPunt(null)}>\n                        <div>\n                            <h2>{selectedPunt.tipus} - {selectedPunt.data.toDateString(\"es-ES\")} </h2>\n                            <h3>{selectedPunt.carrer}</h3>\n                            <div>{selectedPunt.comentari}</div>\n                            <p>{selectedPunt.coord.lat} - {selectedPunt.coord.lon}</p>\n                        </div>\n                    </Popup>)\n                    : null\n                }\n            </ReactMapGl>\n        </div>\n    )\n}\n\nexport default Mapa;","import { UseFetchData } from \"./UseFetchData\";\nimport { UseTransformFinalData } from \"./UseTransformFinalData\";\n\nconst UseGetData = (selected, dateRange) => {\n\n    const { dadesFromGoogle, error, loading } = UseFetchData();\n\n    const { tipusIncidencies, incidencies } = UseTransformFinalData(dadesFromGoogle, selected, dateRange);\n\n    return { tipusIncidencies, incidencies, error, loading }\n}\n\nexport default UseGetData;","import { useEffect, useState } from 'react'\n\nexport const UseFetchData = () => {\n\n    const [dadesFromGoogle, setDadesFromGoogle] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false)\n\n    const firstExtract = (data) => data.map((elem) => elem.content.$t);\n\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(`https://spreadsheets.google.com/feeds/list/${process.env.REACT_APP_GOOGLE_SHEETS_DOC_ID}/od6/public/basic?alt=json`)\n            .then(res => res.json())\n            .then((data) => {\n                setDadesFromGoogle(firstExtract(data.feed.entry));\n                setLoading(false);\n            }\n            ).catch(e => {\n                setError(e);\n                setLoading(false);\n            })\n    }\n        , []);\n\n    return { dadesFromGoogle, error, loading }\n}\n\n","//import moment from 'moment'\n\nexport const UseTransformFinalData = (dadesFromGoogle, selected, dateRange) => {\n\n    const extractDataFromSheet = dadesFromGoogle.map((elem) => {\n        return (elem.split(','));\n    });\n\n    const finalData = extractDataFromSheet.map((elem) => {\n        console.log(\"ELEM:\", elem);\n        const _DATA = 0, _LAT = 2, _LON = 3, _CARRER = 5, _TIPUS = 6, _COMENTARI = 8;\n        let coordenada = { coord: { lat: 0, lon: 0 } };\n        const _lat = elem[_LAT].split(\":\");\n        const _lon = elem[_LON].split(\":\");\n        const _carrer = elem[_CARRER].split(\":\");\n        const _tipus = elem[_TIPUS].split(\":\");\n        const _comentari = elem[_COMENTARI].split(\":\");\n        let _data = elem[_DATA].split(\":\")\n        console.log(\"_comentari:\", _comentari[1])\n        _data = new Date(_data[1].trimLeft()); // 1st argument - string, 2nd argument - format\n        //_data = new Date(\"2020/08/15\");\n        console.log(\"_data:\", _data)\n\n        let final = {\n            ...coordenada, coord: {\n                lat: parseFloat(_lat[1]), lon: parseFloat(_lon[1])\n            },\n            tipus: _tipus[1].trimLeft(),\n            carrer: _carrer[1],\n            data: _data, // convert moment.js object to Date object\n            comentari: _comentari[1]\n        };\n        return (final)\n    });\n\n\n    const _incidencesType = (data) => {\n        if (data) {\n            const _tipus = [];\n            data.forEach((elem) => {\n                _tipus.push(elem.tipus)\n            });\n            return ([...new Set(_tipus)].map((elem) => ({ title: elem })).sort());\n        } else {\n            return ([]);\n        }\n    };\n\n    /*\n    const incidencies = finalData.filter(\n        (registre) => {\n            return selected.some((elem) =>\n                (elem.title === registre.tipus)\n            )\n        }\n    );\n\n        const incidencies = finalData.filter(\n    (registre) => {\n        //         console.log(\"incidencia:\", local);\n        if (!!dateRange && Object.entries(dateRange).length === 0) {\n            //             console.log(\"ESTIC a incidiencies i daterange es buid:\", dateRange)\n            return selected.some((elem) => elem.title === registre.tipus)\n        } else {\n            //             console.log(\"daterange hauria de no ser null:\", dateRange)\n            return selected.some((elem) =>\n                (elem.title === registre.tipus\n                    && (registre.data >= dateRange.startDate)\n                    && (registre.data <= dateRange.endDate)\n                ))\n        }\n    });*/\n\n    const tipusIncidencies = _incidencesType(finalData);\n    console.log(\"inicidencies:\", finalData);\n    console.log(\"tipus:\", tipusIncidencies)\n    return { tipusIncidencies, incidencies: finalData }\n}\n\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\n\nexport const Error = (props) => {\n    return (\n        <>\n            <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                <Typography> Oooops! sembla que hi ha hagut algun problema: {props.err.message}</Typography>\n            </Box>\n        </>\n    )\n\n}","import { Box, Typography, CircularProgress } from '@material-ui/core'\nimport React from 'react'\n\nexport const Spinner = (props) => {\n    return (\n        <>\n            <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                <Typography color=\"textPrimary\"> Ruidos en Castelldefels Playa </Typography>\n            </Box>\n            <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                <CircularProgress />\n            </Box>\n            <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                <Typography color=\"textPrimary\">  {props.text} </Typography>\n            </Box>\n\n        </>\n    )\n\n}\n\n","import React from \"react\";\nimport { DateRangePicker } from \"materialui-daterange-picker/dist\";\n\nexport const ChoiceCalendar = props => {\n  const [open, setOpen] = React.useState(true);\n  //const [dateRange, setDateRange] = useState({});\n\n  const toggle = () => {\n    setOpen(!open);\n    //props.onToggle();\n  }\n\n  const handleChange = (range) => {\n    //  setDateRange(range);\n    console.log(\"Range:\", range);\n    props.onChangeDate(range)\n  }\n\n  return (\n    <>\n      <DateRangePicker\n        open={true}\n        toggle={toggle}\n        closeOnClickOutside={false}\n        onChange={(range) => { handleChange(range) }}\n      />\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport CategoriesSelect from \"./components/Select\";\nimport Mapa from \"./components/Mapa\";\nimport UseGetData from \"./components/UseGetData\";\nimport { Box, Typography, Popover } from '@material-ui/core'\nimport { Error } from './components/Error'\nimport { Spinner } from './components/Spinner'\nimport { ChoiceCalendar } from './components/ChoiceCalendar'\n\n\nfunction App() {\n\n    const [selected, setSelected] = useState([]);\n    const [dateRange, setDateRange] = useState({});\n    const { tipusIncidencies, incidencies, error, loading } = UseGetData(selected, dateRange);\n    const [showCalendar, setShowCalendar] = useState(false);\n\n\n    const onChangeDateOnCalendar = (range) => {\n        console.log(\"Incidencies:\", incidencies)\n        setDateRange((previous) => range);\n        setShowCalendar(false);\n    }\n\n    const toggleCalendar = (e) => {\n        console.log(\"Estat: \", showCalendar);\n        setShowCalendar((prevState) => !prevState);\n\n    }\n\n    const handleClose = () => {\n        toggleCalendar();\n    };\n\n    const resetFiltro = () => {\n        setDateRange({});\n    }\n\n    // const filterIncidencies = (llistaIncidencies, selected) =>{\n    //     return (llistaIncidencies.filter(\n    //     (registre) => {\n    //         return selected.some((elem) =>\n    //             (elem.title === registre.tipus)\n    //         )\n    //     }\n    // ))}\n\n    const filterData = (dateRange, llistaIncidencies, selected) => {\n        return llistaIncidencies.filter(\n            (registre) => {\n                //         console.log(\"incidencia:\", local);\n                if (!!dateRange && Object.entries(dateRange).length === 0) {\n                    //             console.log(\"ESTIC a incidiencies i daterange es buid:\", dateRange)\n                    return selected.some((elem) => elem.title === registre.tipus)\n                } else {\n                    //             console.log(\"daterange hauria de no ser null:\", dateRange)\n                    return selected.some((elem) =>\n                        (elem.title === registre.tipus\n                            && (registre.data >= dateRange.startDate)\n                            && (registre.data <= dateRange.endDate)\n                        ))\n                }\n            });\n    }\n\n    const incidenciesFiltrades = filterData(dateRange, incidencies, selected);\n\n    return (\n        <>\n            {!error && !loading && (\n                <div className=\"App\">\n                    <Box display={\"flex\"}\n                        style={{ \"flexDirection\": \"column\", \"alignItems\": \"flex-start\", \"width\": \"-webkit-fill-available\" }}>\n                        <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                            <CategoriesSelect selected={selected}\n                                setSelected={setSelected}\n                                label=\"\"\n                                incidences={tipusIncidencies} />\n                            <button onClick={toggleCalendar}><span role=\"img\" aria-label=\"filtre\">📅</span> FILTRAR DATES </button>\n                            {Object.entries(dateRange).length !== 0 &&\n                                <button onClick={resetFiltro}> <span role=\"img\" aria-label=\"reset\">🗑️</span> SENSE FILTRE </button>\n                            }\n\n\n                        </Box>\n                        <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                            <Typography color=\"textPrimary\" variant=\"h5\"> Incidències: {incidenciesFiltrades.length} </Typography>\n                        </Box>\n                        {Object.entries(dateRange).length !== 0 &&\n                            <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                                <Typography color=\"colorSecondary\"> Filtre actiu: </Typography>\n                                <Typography color=\"error\"> {(dateRange.startDate.toLocaleDateString())}</Typography>\n                                <Typography color=\"colorSecondary\"><span> - </span> </Typography>\n                                <Typography color=\"error\"> {(dateRange.endDate.toLocaleDateString())}</Typography>\n\n                            </Box>\n                        }\n\n                        <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                            <Mapa dades={incidenciesFiltrades} />\n                        </Box>\n                        <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                            <Typography> REC-PL: Ruidos en Castelldefels Playa by xmorato@gmail.com </Typography>\n                        </Box>\n\n                        <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                            {showCalendar ? (\n                                <Popover\n                                    open={showCalendar}\n                                    onClose={handleClose}\n                                    elevation={20}\n                                    anchorOrigin={{\n                                        vertical: 'center',\n                                        horizontal: 'center',\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'center',\n                                        horizontal: 'center',\n                                    }}\n                                >\n                                    <Typography align=\"center\">  Selecciona dues dates o un rang a la columna de la dreta - ESC per sortir</Typography>\n                                    <ChoiceCalendar onChangeDate={onChangeDateOnCalendar} />\n                                </Popover>)\n                                : null}\n                        </Box>\n\n\n\n                    </Box>\n                </div>)}\n\n            {!!error && <Error err={error} />}\n            {!!loading && <Spinner text={\"Carregant dades\"} />}\n        </>\n    )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}