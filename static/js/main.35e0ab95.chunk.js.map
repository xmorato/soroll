{"version":3,"sources":["components/Select.js","components/Mapa.js","components/UseGetData.js","components/UseFetchData.js","components/UseTransformFinalData.js","components/Error.js","components/Spinner.js","components/IncidencesList.js","components/dates/ShowDateRangeFilter.js","components/dates/ChoiceCalendar.js","components/dates/ShowDateRangePicker.js","App.js","utils/filterData.js","serviceWorker.js","index.js","App.module.css"],"names":["Label","styled","InputWrapper","Tag","label","onDelete","props","onClick","Listbox","CategoriesSelect","setSelected","useAutocomplete","id","defaultValue","multiple","options","incidences","getOptionSelected","option","value","title","getOptionLabel","getRootProps","getInputLabelProps","getInputProps","getTagProps","getListboxProps","getOptionProps","groupedOptions","focused","setAnchorEl","useEffect","NoSsr","ref","className","map","index","length","fontSize","Mapa","useState","width","height","position","longitude","latitude","zoom","viewPort","setViewPort","selectedPunt","setSelectedPunt","mapboxApiAccessToken","process","mapStyle","onViewportChange","viewport","dades","punt","key","coord","lat","lon","Button","e","preventDefault","onClose","tipus","data","toDateString","carrer","comentari","UseGetData","selected","dateRange","dadesFromGoogle","setDadesFromGoogle","error","setError","loading","setLoading","fetch","then","res","json","elem","content","$t","firstExtract","feed","entry","catch","UseFetchData","finalData","split","_lat","_lon","_carrer","_tipus","_comentari","_data","Date","trimLeft","parseFloat","tipusIncidencies","forEach","push","Set","sort","_incidencesType","incidencies","UseTransformFinalData","Error","Box","display","style","Typography","err","message","Spinner","color","CircularProgress","text","IncidencesList","data1","data2","getTime","incidencia","i","styles","card","Card","CardContent","variant","toLocaleDateString","ShowDateRangeFilter","Object","entries","startDate","endDate","ChoiceCalendar","React","open","setOpen","toggle","closeOnClickOutside","onChange","range","console","log","onChangeDate","handleChange","ShowDateRangePicker","showCalendar","handleClose","onChangeDateOnCalendar","Popover","elevation","anchorOrigin","vertical","horizontal","transformOrigin","align","App","setDateRange","setShowCalendar","toggleCalendar","prevState","incidenciesFiltrades","llistaIncidencies","filter","registre","some","filterData","objLlistaIncidenciesTotal","reduce","acum","order","claus","keys","llistaIncidenciesTotal","gutterBottom","start","end","duration","m","previous","cardsContainer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.35e0ab95.chunk.js","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React, { useEffect } from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components';\n\nconst Label = styled('label')`\n  padding: 0 0 4px;\n  line-height: 1.5;\n  display: block;\n`;\n\nconst InputWrapper = styled('div')`\n  width: 90vw;\n  border: 1px solid #d9d9d9;\n  background-color: #fff;\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n\n  &:hover {\n    border-color: #40a9ff;\n  }\n\n  &.focused {\n    border-color: #40a9ff;\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    font-size: 14px;\n    height: 30px;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n`;\n\nconst Tag = styled(({ label, onDelete, ...props }) => (\n  <div {...props}>\n    <span>{label}</span>\n    <CloseIcon onClick={onDelete} />\n  </div>\n))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 22px;\n  background-color: #fafafa;\n  border: 1px solid #e8e8e8;\n  border-radius: 2px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n\n  &:focus {\n    border-color: #40a9ff;\n    background-color: #e6f7ff;\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 12px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`;\n\nconst Listbox = styled('ul')`\n  width: 90vw;\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: #fafafa;\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: #e6f7ff;\n    cursor: pointer;\n\n    & svg {\n      color: #000;\n    }\n  }\n`;\n\nexport default function CategoriesSelect(props) {\n\n  const { setSelected } = props;\n  const {\n    getRootProps,\n    getInputLabelProps,\n    getInputProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    value,\n    focused,\n    setAnchorEl,\n  } = useAutocomplete({\n    id: 'customized-hook-demo',\n    defaultValue: [],\n    multiple: true,\n    options: props.incidences,\n    getOptionSelected: (option, value) => {\n      return (option.title === value.title)\n    },\n    getOptionLabel: (option) => option.title\n  });\n\n  useEffect(() => {\n    setSelected(value)\n  }, [value, setSelected])\n\n\n  return (\n    <NoSsr>\n      <div>\n        <div {...getRootProps()}>\n          <Label {...getInputLabelProps()}>{props.label}</Label>\n          <InputWrapper ref={setAnchorEl} className={focused ? 'focused' : ''}>\n            {value.map((option, index) => (\n              <Tag label={option.title} {...getTagProps({ index })} />\n            ))}\n\n            <input {...getInputProps()} />\n          </InputWrapper>\n        </div>\n        {groupedOptions.length > 0 ? (\n          <Listbox {...getListboxProps()}>\n            {groupedOptions.map((option, index) => (\n              <li {...getOptionProps({ option, index })}>\n                <span>{option.title}</span>\n                <CheckIcon fontSize=\"small\" />\n              </li>\n            ))}\n          </Listbox>\n        ) : null}\n      </div>\n    </NoSsr>\n  );\n}\n\n","import React, { useState } from 'react'\nimport ReactMapGl, { Marker, Popup } from 'react-map-gl'\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { Button } from '@material-ui/core';\nimport \"../css/icona.css\"\nimport NewReleasesTwoToneIcon from '@material-ui/icons/NewReleasesTwoTone';\n//import NewReleasesOutlinedIcon from '@material-ui/icons/NewReleasesOutlined';\n\nconst Mapa = (props) => {\n\n    const estilsMapa = {\n        dark: 'mapbox://styles/mapbox/dark-v10',\n        natural: 'mapbox://styles/mapbox/navigation-guidance-day-v4',\n        light: 'mapbox://styles/mapbox/light-v10',\n        outdoors: 'mapbox://styles/mapbox/outdoors-v11',\n        satellit: 'mapbox://styles/mapbox/satellite-v9'\n    };\n\n    const [viewPort, setViewPort] = useState({\n        width: \"100vh\",\n        height: \"60vh\",\n        position: \"\",\n        longitude: 1.975731,\n        latitude: 41.266965,\n        zoom: 15\n    });\n\n    const [selectedPunt, setSelectedPunt] = useState(null);\n\n    return (\n        <div>\n            <ReactMapGl {...viewPort}\n                mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n                mapStyle={estilsMapa.dark}\n                onViewportChange={viewport => {\n                    setViewPort(viewport);\n                }}\n            >\n\n                {\n                    props.dades.map((punt, index) => {\n                        return (\n                            <Marker\n                                key={index}\n                                latitude={punt.coord.lat}\n                                longitude={punt.coord.lon}\n                            >\n                                <Button\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        setSelectedPunt(punt);\n                                    }}>\n                                    <NewReleasesTwoToneIcon className=\"Icona\" fontSize={\"large\"} />\n                                    {/* <img src={imatge} alt={punt.carrer} /> */}\n                                </Button>\n                            </Marker>\n                        )\n                    })\n                }\n\n                {selectedPunt ? (\n                    <Popup latitude={selectedPunt.coord.lat}\n                        longitude={selectedPunt.coord.lon}\n                        onClose={() => setSelectedPunt(null)}>\n                        <div>\n                            <h2>{selectedPunt.tipus} - {selectedPunt.data.toDateString(\"es-ES\")} </h2>\n                            <h3>{selectedPunt.carrer}</h3>\n                            <div>{selectedPunt.comentari}</div>\n                            <p>{selectedPunt.coord.lat} - {selectedPunt.coord.lon}</p>\n                        </div>\n                    </Popup>)\n                    : null\n                }\n            </ReactMapGl>\n        </div>\n    )\n}\n\nexport default Mapa;","import { UseFetchData } from \"./UseFetchData\";\nimport { UseTransformFinalData } from \"./UseTransformFinalData\";\n\nconst UseGetData = (selected, dateRange) => {\n\n    const { dadesFromGoogle, error, loading } = UseFetchData();\n\n    const { tipusIncidencies, incidencies } = UseTransformFinalData(dadesFromGoogle, selected, dateRange);\n\n    return { tipusIncidencies, incidencies, error, loading }\n}\n\nexport default UseGetData;","import { useEffect, useState } from 'react'\n\nexport const UseFetchData = () => {\n\n    const [dadesFromGoogle, setDadesFromGoogle] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false)\n\n    const firstExtract = (data) => data.map((elem) => elem.content.$t);\n\n\n    useEffect(() => {\n        setLoading(true);\n        fetch(`https://spreadsheets.google.com/feeds/list/${process.env.REACT_APP_GOOGLE_SHEETS_DOC_ID}/od6/public/basic?alt=json`)\n            .then(res => res.json())\n            .then((data) => {\n                setDadesFromGoogle(firstExtract(data.feed.entry));\n                setLoading(false);\n            }\n            ).catch(e => {\n                setError(e);\n                setLoading(false);\n            })\n    }\n        , []);\n\n    return { dadesFromGoogle, error, loading }\n}\n\n","//import moment from 'moment'\n\nexport const UseTransformFinalData = (dadesFromGoogle, selected, dateRange) => {\n\n    const extractDataFromSheet = dadesFromGoogle.map((elem) => {\n        return (elem.split(','));\n    });\n\n    const finalData = extractDataFromSheet.map((elem) => {\n        //       console.log(\"ELEM:\", elem);\n        const _DATA = 0, _LAT = 2, _LON = 3, _CARRER = 5, _TIPUS = 6, _COMENTARI = 8;\n        let coordenada = { coord: { lat: 0, lon: 0 } };\n        const _lat = elem[_LAT].split(\":\");\n        const _lon = elem[_LON].split(\":\");\n        const _carrer = elem[_CARRER].split(\":\");\n        const _tipus = elem[_TIPUS].split(\":\");\n        const _comentari = elem[_COMENTARI].split(\":\");\n        let _data = elem[_DATA].split(\":\")\n        //     console.log(\"_comentari:\", _comentari[1])\n        _data = new Date(_data[1].trimLeft()); // 1st argument - string, 2nd argument - format\n        //_data = new Date(\"2020/08/15\");\n        //     console.log(\"_data:\", _data)\n\n        let final = {\n            ...coordenada, coord: {\n                lat: parseFloat(_lat[1]), lon: parseFloat(_lon[1])\n            },\n            tipus: _tipus[1].trimLeft(),\n            carrer: _carrer[1],\n            data: _data, // convert moment.js object to Date object\n            comentari: _comentari[1]\n        };\n        return (final)\n    });\n\n\n    const _incidencesType = (data) => {\n        if (data) {\n            const _tipus = [];\n            data.forEach((elem) => {\n                _tipus.push(elem.tipus)\n            });\n            return ([...new Set(_tipus)].map((elem) => ({ title: elem })).sort());\n        } else {\n            return ([]);\n        }\n    };\n\n    /*\n    const incidencies = finalData.filter(\n        (registre) => {\n            return selected.some((elem) =>\n                (elem.title === registre.tipus)\n            )\n        }\n    );\n\n        const incidencies = finalData.filter(\n    (registre) => {\n        //         console.log(\"incidencia:\", local);\n        if (!!dateRange && Object.entries(dateRange).length === 0) {\n            //             console.log(\"ESTIC a incidiencies i daterange es buid:\", dateRange)\n            return selected.some((elem) => elem.title === registre.tipus)\n        } else {\n            //             console.log(\"daterange hauria de no ser null:\", dateRange)\n            return selected.some((elem) =>\n                (elem.title === registre.tipus\n                    && (registre.data >= dateRange.startDate)\n                    && (registre.data <= dateRange.endDate)\n                ))\n        }\n    });*/\n\n    const tipusIncidencies = _incidencesType(finalData);\n    //    console.log(\"inicidencies:\", finalData);\n    //    console.log(\"tipus:\", tipusIncidencies)\n    return { tipusIncidencies, incidencies: finalData }\n}\n\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\n\nexport const Error = (props) => {\n    return (\n        <>\n            <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                <Typography> Oooops! sembla que hi ha hagut algun problema: {props.err.message}</Typography>\n            </Box>\n        </>\n    )\n\n}","import { Box, Typography, CircularProgress } from '@material-ui/core'\nimport React from 'react'\n\nexport const Spinner = (props) => {\n    return (\n        <>\n            <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                <Typography color=\"textPrimary\"> Ruidos en Castelldefels Playa </Typography>\n            </Box>\n            <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                <CircularProgress />\n            </Box>\n            <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                <Typography color=\"textPrimary\">  {props.text} </Typography>\n            </Box>\n\n        </>\n    )\n\n}\n\n","import React from 'react';\n//import { makeStyles } from '@material-ui/core/styles';\nimport styles from '../App.module.css';\n\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\n\nconst IncidencesList = ({ incidencies }) => {\n\n    return (\n        <>\n            {\n                incidencies.sort((data1, data2) => {\n                    return (data2.data.getTime() - (data1.data.getTime())\n                    )\n                })\n                    .map((incidencia, i) => {\n                        return (\n                            <div className={styles.card} key={i}>\n                                <Card className={styles.card} >\n                                    <CardContent>\n                                        <Typography variant=\"h5\">Data: {incidencia.data.toLocaleDateString()}</Typography>\n                                        <Typography variant=\"h6\">Tipus: {incidencia.tipus}</Typography>\n                                        <Typography>Carrer: {incidencia.carrer}</Typography>\n                                        <Typography>Comentari:{incidencia.comentari}</Typography>\n                                        <Typography>Lat: {incidencia.coord.lat}</Typography>\n                                        <Typography>Long: {incidencia.coord.lat}</Typography>\n                                    </CardContent>\n                                </Card>\n                            </div>\n                        )\n                    })\n            }\n        </>\n    )\n}\n\nexport default IncidencesList","import { Box, Typography } from '@material-ui/core'\nimport React from 'react'\n\nexport const ShowDateRangeFilter = ({ dateRange }) => {\n    return (\n        Object.entries(dateRange).length !== 0 &&\n        <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n            <Typography > Filtre actiu: {\" \"} </Typography>\n            <Typography color=\"error\"> {(dateRange.startDate.toLocaleDateString())}</Typography>\n            <Typography > {\" - \"} </Typography>\n            <Typography color=\"error\"> {(dateRange.endDate.toLocaleDateString())}</Typography>\n        </Box>\n    )\n}","import React from \"react\";\nimport { DateRangePicker } from \"materialui-daterange-picker/dist\";\n\nexport const ChoiceCalendar = props => {\n  const [open, setOpen] = React.useState(true);\n  //const [dateRange, setDateRange] = useState({});\n\n  const toggle = () => {\n    setOpen(!open);\n    //props.onToggle();\n  }\n\n  const handleChange = (range) => {\n    //  setDateRange(range);\n    console.log(\"Range:\", range);\n    props.onChangeDate(range)\n  }\n\n  return (\n    <>\n      <DateRangePicker\n        open={true}\n        toggle={toggle}\n        closeOnClickOutside={false}\n        onChange={(range) => { handleChange(range) }}\n      />\n    </>\n  );\n}\n","import { Popover, Typography } from '@material-ui/core'\nimport { ChoiceCalendar } from './ChoiceCalendar'\nimport React from 'react'\n\nexport const ShowDateRangePicker = ({ showCalendar, handleClose, onChangeDateOnCalendar }) => {\n    return (\n        showCalendar ? (\n            <Popover\n                open={showCalendar}\n                onClose={handleClose}\n                elevation={20}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'top',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'top',\n                }}\n            >\n                <Typography align=\"center\">  Selecciona dues dates o un rang a la columna de la dreta - ESC per sortir</Typography>\n                <ChoiceCalendar onChangeDate={onChangeDateOnCalendar} />\n            </Popover>)\n            : null\n    )\n}","import React, { useState } from 'react';\nimport styles from './App.module.css';\nimport CategoriesSelect from \"./components/Select\";\nimport Mapa from \"./components/Mapa\";\nimport UseGetData from \"./components/UseGetData\";\nimport { Box, Typography, Popover, Button } from '@material-ui/core'\nimport { Error } from './components/Error'\nimport { Spinner } from './components/Spinner'\nimport CountUp from 'react-countup';\nimport IncidencesList from './components/IncidencesList'\nimport IncidencesBoard from './components/IncidencesBoard';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport EventBusyIcon from '@material-ui/icons/EventBusy';\nimport { filterData } from './utils/filterData'\nimport { ShowDateRangeFilter } from './components/dates/ShowDateRangeFilter'\nimport { ChoiceCalendar } from './components/dates/ChoiceCalendar'\nimport { ShowDateRangePicker } from './components/dates/ShowDateRangePicker'\n\n\nfunction App() {\n\n    const [selected, setSelected] = useState([]);\n    const [dateRange, setDateRange] = useState({});\n    const { tipusIncidencies, incidencies, error, loading } = UseGetData(selected, dateRange);\n    const [showCalendar, setShowCalendar] = useState(false);\n\n\n    const onChangeDateOnCalendar = (range) => {\n        //   console.log(\"Incidencies:\", incidencies)\n        setDateRange((previous) => range);\n        setShowCalendar(false);\n    }\n\n    const toggleCalendar = (e) => {\n        setShowCalendar((prevState) => !prevState);\n    }\n\n    const handleClose = () => {\n        toggleCalendar();\n    };\n\n    const resetFiltro = () => {\n        setDateRange({});\n    }\n\n\n    const incidenciesFiltrades = filterData(dateRange, incidencies, selected);\n    const objLlistaIncidenciesTotal = incidencies.reduce((acum, order) => {\n        return { ...acum, [order.tipus]: (acum[order.tipus] || 0) + 1 }\n    }, {})\n    const claus = Object.keys(objLlistaIncidenciesTotal);\n    let llistaIncidenciesTotal = [];\n    for (let i = 0; i < claus.length; i++) {\n        llistaIncidenciesTotal = [...llistaIncidenciesTotal, [claus[i], objLlistaIncidenciesTotal[claus[i]]]]\n    }\n\n    return (\n        <>\n            {!error && !loading && (\n                <div className=\"App\">\n                    <Box display={\"flex\"}\n                        style={{ \"flexDirection\": \"column\", \"alignItems\": \"flex-start\", \"width\": \"-webkit-fill-available\" }}>\n                        <Box display={\"flex\"} style={{ \"marginBottom\": \"10px\", \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                            <CategoriesSelect\n                                selected={selected}\n                                setSelected={setSelected}\n                                label=\"Selecciona el(s) tipus de incidències\"\n                                incidences={tipusIncidencies} />\n                        </Box>\n                        <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                            <Button color=\"primary\" onClick={toggleCalendar}><EventAvailableIcon />{\" \"}Filtrar per Dates</Button>\n                            {Object.entries(dateRange).length !== 0 &&\n                                <Button color=\"secondary\" onClick={resetFiltro}> <EventBusyIcon />{\" \"}Esborrar filtre</Button>\n                            }\n                        </Box>\n                        <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                            <Typography color=\"textPrimary\" variant=\"h6\" gutterBottom> Incidències: {\" \"}\n                                <CountUp start={0}\n                                    end={incidenciesFiltrades.length}\n                                    duration={1.25}\n                                />\n                            </Typography>\n                        </Box>\n\n                        <ShowDateRangeFilter dateRange={dateRange} />\n\n                        <Box m={2} display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                            <Mapa dades={incidenciesFiltrades} />\n                        </Box>\n                        {/* {showCalendar ? (\n                            <Popover\n                                open={showCalendar}\n                                onClose={handleClose}\n                                elevation={8}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'center',\n                                }}\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'center',\n                                }}\n                            >\n                                <Typography align=\"center\">  Selecciona dues dates o un rang a la columna de la dreta - ESC per sortir</Typography>\n                                <ChoiceCalendar onChangeDate={onChangeDateOnCalendar} />\n                            </Popover>)\n                            : null} */}\n\n                        <ShowDateRangePicker\n                            handleClose={handleClose}\n                            onChangeDateOnCalendar={onChangeDateOnCalendar}\n                            showCalendar={showCalendar}\n                        />\n\n                        {/* <div className=\"incidences_desglos\">\n                            <IncidencesBoard data={llistaIncidenciesTotal} setSelected={setSelected} />\n                        </div> */}\n\n                        {incidenciesFiltrades.length !== 0 ?\n                            <div id=\"principal\" className={styles.cardsContainer}>\n                                <IncidencesList incidencies={incidenciesFiltrades} />\n                            </div>\n                            : null\n                        }\n                    </Box>\n                    <Box display={\"flex\"} style={{ \"width\": \"-webkit-fill-available\", \"justifyContent\": \"center\" }}>\n                        <Typography style={{ \"fontSize\": \"0.8rem\" }}> REC-PL: Ruidos en Castelldefels Playa, fem un millor barri </Typography>\n                    </Box>\n                </div>)}\n\n            {!!error && <Error err={error} />}\n            {!!loading && <Spinner text={\"Carregant dades\"} />}\n        </>\n    )\n\n}\n\nexport default App;\n","export const filterData = (dateRange, llistaIncidencies, selected) => {\n    return llistaIncidencies.filter(\n        (registre) => {\n            //         console.log(\"incidencia:\", local);\n            if (!!dateRange && Object.entries(dateRange).length === 0) {\n                //             console.log(\"ESTIC a incidiencies i daterange es buid:\", dateRange)\n                return selected.some((elem) => elem.title === registre.tipus)\n            } else {\n                //             console.log(\"daterange hauria de no ser null:\", dateRange)\n                return selected.some((elem) =>\n                    (elem.title === registre.tipus\n                        && (registre.data >= dateRange.startDate)\n                        && (registre.data <= dateRange.endDate)\n                    ))\n            }\n        });\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"App_cardsContainer__2PKmS\",\"card\":\"App_card__3tefE\"};"],"sourceRoot":""}